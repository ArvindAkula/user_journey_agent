package com.userjourney.analytics.model;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.time.LocalDateTime;

/**
 * Model representing personalized recommendations generated by Nova
 */
public class PersonalizedRecommendation {
    
    @JsonProperty("type")
    private String type; // content, feature, intervention
    
    @JsonProperty("title")
    private String title;
    
    @JsonProperty("description")
    private String description;
    
    @JsonProperty("relevanceScore")
    private int relevanceScore; // 1-100
    
    @JsonProperty("priority")
    private String priority; // high, medium, low
    
    @JsonProperty("category")
    private String category;
    
    @JsonProperty("reasoning")
    private String reasoning;
    
    @JsonProperty("expectedBenefit")
    private String expectedBenefit;
    
    @JsonProperty("implementationApproach")
    private String implementationApproach;
    
    @JsonProperty("successProbability")
    private Double successProbability;
    
    @JsonProperty("timestamp")
    @JsonFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss")
    private LocalDateTime timestamp;
    
    // Default constructor
    public PersonalizedRecommendation() {}
    
    // Builder pattern
    public static Builder builder() {
        return new Builder();
    }
    
    public static class Builder {
        private PersonalizedRecommendation recommendation = new PersonalizedRecommendation();
        
        public Builder type(String type) {
            recommendation.type = type;
            return this;
        }
        
        public Builder title(String title) {
            recommendation.title = title;
            return this;
        }
        
        public Builder description(String description) {
            recommendation.description = description;
            return this;
        }
        
        public Builder relevanceScore(int relevanceScore) {
            recommendation.relevanceScore = relevanceScore;
            return this;
        }
        
        public Builder priority(String priority) {
            recommendation.priority = priority;
            return this;
        }
        
        public Builder category(String category) {
            recommendation.category = category;
            return this;
        }
        
        public Builder reasoning(String reasoning) {
            recommendation.reasoning = reasoning;
            return this;
        }
        
        public Builder expectedBenefit(String expectedBenefit) {
            recommendation.expectedBenefit = expectedBenefit;
            return this;
        }
        
        public Builder implementationApproach(String implementationApproach) {
            recommendation.implementationApproach = implementationApproach;
            return this;
        }
        
        public Builder successProbability(Double successProbability) {
            recommendation.successProbability = successProbability;
            return this;
        }
        
        public Builder timestamp(LocalDateTime timestamp) {
            recommendation.timestamp = timestamp;
            return this;
        }
        
        public PersonalizedRecommendation build() {
            return recommendation;
        }
    }
    
    // Getters and Setters
    public String getType() {
        return type;
    }
    
    public void setType(String type) {
        this.type = type;
    }
    
    public String getTitle() {
        return title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }
    
    public String getDescription() {
        return description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    public int getRelevanceScore() {
        return relevanceScore;
    }
    
    public void setRelevanceScore(int relevanceScore) {
        this.relevanceScore = relevanceScore;
    }
    
    public String getPriority() {
        return priority;
    }
    
    public void setPriority(String priority) {
        this.priority = priority;
    }
    
    public String getCategory() {
        return category;
    }
    
    public void setCategory(String category) {
        this.category = category;
    }
    
    public String getReasoning() {
        return reasoning;
    }
    
    public void setReasoning(String reasoning) {
        this.reasoning = reasoning;
    }
    
    public String getExpectedBenefit() {
        return expectedBenefit;
    }
    
    public void setExpectedBenefit(String expectedBenefit) {
        this.expectedBenefit = expectedBenefit;
    }
    
    public String getImplementationApproach() {
        return implementationApproach;
    }
    
    public void setImplementationApproach(String implementationApproach) {
        this.implementationApproach = implementationApproach;
    }
    
    public Double getSuccessProbability() {
        return successProbability;
    }
    
    public void setSuccessProbability(Double successProbability) {
        this.successProbability = successProbability;
    }
    
    public LocalDateTime getTimestamp() {
        return timestamp;
    }
    
    public void setTimestamp(LocalDateTime timestamp) {
        this.timestamp = timestamp;
    }
    
    @Override
    public String toString() {
        return "PersonalizedRecommendation{" +
                "type='" + type + '\'' +
                ", title='" + title + '\'' +
                ", relevanceScore=" + relevanceScore +
                ", priority='" + priority + '\'' +
                ", timestamp=" + timestamp +
                '}';
    }
}