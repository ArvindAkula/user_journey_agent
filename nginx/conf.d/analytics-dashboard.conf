# Analytics Dashboard Configuration
server {
    listen 80;
    server_name ${ANALYTICS_DASHBOARD_DOMAIN} analytics.yourdomain.com dashboard.yourdomain.com;
    
    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name ${ANALYTICS_DASHBOARD_DOMAIN} analytics.yourdomain.com dashboard.yourdomain.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/analytics-dashboard.crt;
    ssl_certificate_key /etc/nginx/ssl/analytics-dashboard.key;
    
    # Include common SSL settings
    include /etc/nginx/conf.d/ssl-common.conf;
    
    # Additional security headers for analytics (stricter)
    add_header X-Frame-Options "DENY" always;
    add_header Referrer-Policy "strict-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' wss: https:; frame-ancestors 'none';" always;

    # IP whitelist for analytics dashboard (optional)
    # allow 192.168.1.0/24;  # Office network
    # allow 10.0.0.0/8;      # VPN network
    # deny all;

    # Main analytics dashboard
    location / {
        proxy_pass http://analytics_dashboard;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Health check bypass
        if ($request_uri ~ "^/(health|metrics)$") {
            access_log off;
        }
    }

    # Analytics API endpoints with stricter rate limiting and CORS
    location /api/analytics/ {
        limit_req zone=analytics burst=10 nodelay;
        
        # Include CORS configuration
        include /etc/nginx/conf.d/cors.conf;
        
        proxy_pass http://backend_api/api/analytics/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Analytics-specific headers
        add_header X-Analytics-Dashboard "true" always;
        
        # Timeout settings
        proxy_connect_timeout 5s;
        proxy_send_timeout 120s;  # Longer for analytics queries
        proxy_read_timeout 120s;
    }

    # WebSocket for real-time analytics
    location /ws/ {
        proxy_pass http://backend_api/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeout settings
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }

    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://analytics_dashboard;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
    }

    # Metrics endpoint for monitoring
    location /metrics {
        proxy_pass http://analytics_dashboard/metrics;
        access_log off;
    }

    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}