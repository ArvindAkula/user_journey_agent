# User Application Configuration
server {
    listen 80;
    server_name ${USER_APP_DOMAIN} app.yourdomain.com user-app.yourdomain.com;
    
    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name ${USER_APP_DOMAIN} app.yourdomain.com user-app.yourdomain.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/user-app.crt;
    ssl_certificate_key /etc/nginx/ssl/user-app.key;
    
    # Include common SSL settings
    include /etc/nginx/conf.d/ssl-common.conf;

    # Main application
    location / {
        proxy_pass http://user_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Health check bypass
        if ($request_uri = "/health") {
            access_log off;
        }
    }

    # API endpoints with rate limiting and CORS
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        # Include CORS configuration
        include /etc/nginx/conf.d/cors.conf;
        
        proxy_pass http://backend_api/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://user_app;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
    }

    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}