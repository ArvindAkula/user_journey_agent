#!/bin/bash

echo "üßπ Cleaning up sensitive files before public commit"
echo ""

# Remove sensitive files from git tracking (if they were previously committed)
echo "üìù Removing sensitive files from git tracking..."
git rm --cached .env.production 2>/dev/null || echo "  ‚úì .env.production not tracked"
git rm --cached packages/user-app/.env 2>/dev/null || echo "  ‚úì packages/user-app/.env not tracked"
git rm --cached -r backups/ 2>/dev/null || echo "  ‚úì backups/ not tracked"
git rm --cached -r infrastructure/cdk.out/ 2>/dev/null || echo "  ‚úì infrastructure/cdk.out/ not tracked"
git rm --cached -r terraform/logs/ 2>/dev/null || echo "  ‚úì terraform/logs/ not tracked"
git rm --cached -r backend/logs/ 2>/dev/null || echo "  ‚úì backend/logs/ not tracked"
git rm --cached -r dev-scripts/ 2>/dev/null || echo "  ‚úì dev-scripts/ not tracked"
git rm --cached -r markdown/ 2>/dev/null || echo "  ‚úì markdown/ not tracked"

echo ""
echo "‚úÖ Sensitive files removed from git tracking"
echo ""
echo "üìã Files excluded via .gitignore:"
echo "  ‚Ä¢ .env.production"
echo "  ‚Ä¢ packages/user-app/.env"
echo "  ‚Ä¢ backups/"
echo "  ‚Ä¢ dev-scripts/ (contains account-specific scripts)"
echo "  ‚Ä¢ markdown/ (contains account-specific docs)"
echo "  ‚Ä¢ infrastructure/cdk.out/"
echo "  ‚Ä¢ terraform/logs/"
echo "  ‚Ä¢ backend/logs/"
echo ""
echo "‚ö†Ô∏è  IMPORTANT NEXT STEPS:"
echo ""
echo "1. Create your own .env files from .env.example templates"
echo "2. Commit the changes:"
echo "   git add .gitignore .env.example packages/user-app/.env.example"
echo "   git commit -m 'Add .gitignore for sensitive files and example configs'"
echo ""
echo "3. Verify what will be committed:"
echo "   git status"
echo ""
echo "4. Your dev-scripts/ and markdown/ folders will stay local (not pushed)"
echo ""
